
@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 0 0% 98%;
    --foreground: 222.2 84% 4.9%;

    --card: 0 0% 100%;
    --card-foreground: 222.2 84% 4.9%;

    --popover: 0 0% 100%;
    --popover-foreground: 222.2 84% 4.9%;

    --primary: 142 52% 34%;
    --primary-foreground: 0 0% 100%;

    --secondary: 35 100% 50%;
    --secondary-foreground: 0 0% 100%;

    --muted: 210 40% 96.1%;
    --muted-foreground: 215.4 16.3% 46.9%;

    --accent: 142 41% 64%;
    --accent-foreground: 222.2 47.4% 11.2%;

    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 210 40% 98%;

    --border: 214.3 31.8% 91.4%;
    --input: 214.3 31.8% 91.4%;
    --ring: 222.2 84% 4.9%;

    --radius: 0.5rem;
    
    /* Safe area inset variables */
    --safe-area-inset-top: env(safe-area-inset-top, 0px);
    --safe-area-inset-bottom: env(safe-area-inset-bottom, 0px);
    --safe-area-inset-left: env(safe-area-inset-left, 0px);
    --safe-area-inset-right: env(safe-area-inset-right, 0px);
  }

  .dark {
    --background: 222.2 84% 4.9%;
    --foreground: 210 40% 98%;

    --card: 222.2 84% 4.9%;
    --card-foreground: 210 40% 98%;

    --popover: 222.2 84% 4.9%;
    --popover-foreground: 210 40% 98%;

    --primary: 142 52% 34%;
    --primary-foreground: 0 0% 100%;

    --secondary: 35 100% 50%;
    --secondary-foreground: 0 0% 100%;

    --muted: 216 39% 8%;
    --muted-foreground: 215 20.2% 65.1%;

    --accent: 142 41% 64%;
    --accent-foreground: 210 40% 98%;

    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 210 40% 98%;

    --border: 216 34% 17%;
    --input: 216 34% 17%;
    --ring: 216 34% 17%;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground;
    margin: 0;
    padding: 0;
    width: 100%;
    height: 100%;
    max-width: 100vw;
    overflow-x: hidden;
    position: relative;
    
    /* Prevent element selection when tapping */
    -webkit-tap-highlight-color: transparent;
    -webkit-touch-callout: none;
    
    /* Prevent scroll bounce effects on iOS */
    overscroll-behavior: none;
  }
  
  /* Enhanced fix for buttons, links and interactive elements to prevent stuck states */
  button, a, [role="button"], .interactive {
    -webkit-touch-callout: none;
    -webkit-tap-highlight-color: transparent;
    touch-action: manipulation;
    -webkit-user-select: none;
    user-select: none;
    
    /* Reset tap highlight */
    -webkit-tap-highlight-color: rgba(0,0,0,0);
    
    /* Ensure states reset after interaction */
    &:active {
      opacity: 0.9;
      transition: opacity 0.1s;
    }
    
    /* Force release of active state */
    &:not(:active) {
      opacity: 1;
      transition: opacity 0.1s;
    }
  }
  
  /* Special handling for touch devices */
  @media (hover: none) {
    /* Reset any stuck hover states immediately */
    [data-touch-button="true"] {
      &:hover, &:active, &:focus, &.active, &.focus {
        transition: all 0.2s ease !important;
      }
      
      /* Ensure button color is applied correctly */
      &.bg-primary {
        background-color: #2E7D32 !important;
      }
      
      &.text-primary-foreground {
        color: #FFFFFF !important;
      }
      
      /* Reset default styling for non-active buttons */
      &:not(:active):not(:focus) {
        background-color: var(--current-background, initial) !important;
        color: var(--current-color, initial) !important;
      }
    }
    
    /* Ensure buttons don't get stuck in hover state */
    button:after, a:after, [role="button"]:after {
      content: "";
      display: none;
    }
  }
  
  /* Force all focused elements to reset */
  :focus {
    outline: none;
  }
  
  /* Ensure proper touch feedback */
  @media (hover: none) {
    button:active, a:active, [role="button"]:active {
      opacity: 0.9;
      transition: opacity 0.1s;
    }
    
    button:not(:active), a:not(:active), [role="button"]:not(:active) {
      opacity: 1;
      transition: opacity 0.1s;
    }
    
    /* Reset focus state immediately after touch */
    button:focus-visible, a:focus-visible, [role="button"]:focus-visible {
      outline: none;
    }
  }
  
  /* Ensure buttons with bg-primary class always display correctly on mobile */
  @media (hover: none) {
    .bg-primary {
      background-color: #2E7D32 !important;
    }
    
    button[class*="bg-primary"], 
    a[class*="bg-primary"],
    [role="button"][class*="bg-primary"] {
      background-color: #2E7D32 !important;
    }
    
    .text-primary-foreground {
      color: #FFFFFF !important;
    }
  }
  
  #root {
    min-height: 100vh;
    width: 100%;
    max-width: 100%;
    margin: 0;
    padding: 0;
    position: relative;
    display: flex;
    flex-direction: column;
  }

  /* Mobile viewport optimization */
  html {
    height: -webkit-fill-available;
    width: 100vw;
    overflow-x: hidden;
  }

  body {
    min-height: 100vh;
    min-height: -webkit-fill-available;
    overflow-x: hidden;
  }

  /* Hide scrollbar for a cleaner mobile look */
  ::-webkit-scrollbar {
    display: none;
  }
  
  /* Mobile text size adjustments */
  h1 {
    @apply text-2xl font-bold;
  }
  
  h2 {
    @apply text-xl font-bold;
  }
  
  h3 {
    @apply text-lg font-semibold;
  }
}

/* Utility classes for mobile layout */
@layer components {
  .mobile-container {
    @apply px-4 w-full max-w-[500px] mx-auto;
  }
  
  .mobile-page {
    @apply pt-16 pb-20 min-h-screen w-full;
  }
  
  .top-nav {
    @apply fixed top-0 left-0 right-0 h-16 z-50 bg-white shadow-sm;
    padding-top: var(--safe-area-inset-top);
  }
  
  .bottom-tabs {
    @apply fixed bottom-0 left-0 right-0 z-50 bg-white shadow-lg border-t;
    padding-bottom: var(--safe-area-inset-bottom);
    height: calc(4rem + var(--safe-area-inset-bottom));
  }
  
  .location-badge {
    @apply bg-location-light/20 text-location-dark px-2 py-1 rounded-full text-sm flex items-center gap-1;
  }
}

/* Touch-specific overrides to prevent stuck button states */
@media (pointer: coarse) {
  button, a, [role="button"] {
    /* Ensure visual feedback is brief and resets completely */
    transition-duration: 0.1s !important;
    
    /* Prevent sticky hover states */
    &:hover {
      transition-duration: 0s !important;
    }
    
    /* Force active state to be brief */
    &:active {
      transition-duration: 0.05s !important;
    }
    
    /* Ensure state is fully reset after interaction */
    &:not(:active) {
      opacity: 1 !important;
    }
    
    /* Ensure primary button colors always apply */
    &.bg-primary {
      background-color: #2E7D32 !important;
    }
    
    &.text-primary-foreground {
      color: #FFFFFF !important;
    }
  }
}
