
import { useState, useEffect } from 'react';

interface Message {
  content: string;
  isBot: boolean;
}

export const useAssistantChat = () => {
  const [messages, setMessages] = useState<Message[]>([]);
  const [inputValue, setInputValue] = useState('');

  useEffect(() => {
    setMessages([
      {
        content: "Hej! ğŸ‘‹\n\n" +
                 "Jag Ã¤r Nina, din personliga tÃ¤vlingsassistent. Hur kan jag hjÃ¤lpa dig idag?\n\n" +
                 "Jag kan hjÃ¤lpa dig med:\n" +
                 "â€¢ Hitta och filtrera tÃ¤vlingar som passar dig\n" +
                 "â€¢ Svara pÃ¥ frÃ¥gor om specifika tÃ¤vlingar\n" +
                 "â€¢ FÃ¶rklara anmÃ¤lningsprocessen\n" +
                 "â€¢ Ge information om starttider och resultat\n" +
                 "â€¢ HjÃ¤lpa till med andra tÃ¤vlingsrelaterade frÃ¥gor\n\n" +
                 "StÃ¤ll gÃ¤rna din frÃ¥ga sÃ¥ ska jag gÃ¶ra mitt bÃ¤sta fÃ¶r att hjÃ¤lpa dig! ğŸ˜Š",
        isBot: true
      }
    ]);
  }, []);

  const sendMessage = async (message: string) => {
    if (!message.trim()) return;

    setMessages(prev => [...prev, { content: message, isBot: false }]);

    setTimeout(() => {
      setMessages(prev => [...prev, {
        content: "Hej! ğŸ‘‹\n\n" + 
                "Tack fÃ¶r din frÃ¥ga! Jag Ã¤r faktiskt ganska ny hÃ¤r och hÃ¥ller fortfarande pÃ¥ att lÃ¤ra mig alla detaljer om tÃ¤vlingarna. " +
                "Just den hÃ¤r frÃ¥gan kÃ¤nner jag mig tyvÃ¤rr inte helt sÃ¤ker pÃ¥ Ã¤n.\n\n" +
                "Skulle du kunna testa att komma tillbaka om nÃ¥gra dagar? DÃ¥ hoppas jag att jag har hunnit sÃ¤tta mig in i det bÃ¤ttre " +
                "och kan ge dig ett mer hjÃ¤lpsamt svar! ğŸ’ª\n\n" +
                "Under tiden, finns det nÃ¥got annat jag kan hjÃ¤lpa till med? ğŸ˜Š",
        isBot: true
      }]);
    }, 1000);

    setInputValue('');
  };

  return {
    messages,
    inputValue,
    setInputValue,
    sendMessage
  };
};
