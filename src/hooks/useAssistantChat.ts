
import { useState, useEffect } from 'react';

interface Message {
  content: string;
  isBot: boolean;
}

export const useAssistantChat = () => {
  const [messages, setMessages] = useState<Message[]>([]);
  const [inputValue, setInputValue] = useState('');

  useEffect(() => {
    setMessages([
      {
        content: "Hej! üëã\n\n" +
                 "Jag √§r Nina, din personliga t√§vlingsassistent. Hur kan jag hj√§lpa dig idag?\n\n" +
                 "Jag kan hj√§lpa dig med:\n" +
                 "‚Ä¢ Hitta och filtrera t√§vlingar som passar dig\n" +
                 "‚Ä¢ Svara p√• fr√•gor om specifika t√§vlingar\n" +
                 "‚Ä¢ F√∂rklara anm√§lningsprocessen\n" +
                 "‚Ä¢ Ge information om starttider och resultat\n" +
                 "‚Ä¢ Hj√§lpa till med andra t√§vlingsrelaterade fr√•gor\n\n" +
                 "St√§ll g√§rna din fr√•ga s√• ska jag g√∂ra mitt b√§sta f√∂r att hj√§lpa dig! üòä",
        isBot: true
      }
    ]);
  }, []);

  const sendMessage = async (message: string) => {
    if (!message.trim()) return;

    setMessages(prev => [...prev, { content: message, isBot: false }]);

    // Simulera en mer support-orienterad respons
    setTimeout(() => {
      setMessages(prev => [...prev, {
        content: "Tack f√∂r din fr√•ga! Jag f√∂rst√•r att du vill veta mer om " + 
                "t√§vlingar. Just nu h√•ller vi p√• att utveckla mina funktioner, " +
                "men jag ska g√∂ra mitt b√§sta f√∂r att hj√§lpa dig.\n\n" +
                "Kan du ber√§tta lite mer specifikt vad du skulle vilja veta? " +
                "Till exempel om du letar efter en specifik typ av t√§vling eller " +
                "har fr√•gor om en s√§rskild t√§vling?",
        isBot: true
      }]);
    }, 1000);

    setInputValue('');
  };

  return {
    messages,
    inputValue,
    setInputValue,
    sendMessage
  };
};
